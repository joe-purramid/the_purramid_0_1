// the_purramid_0_1\app\src\main\specifications
// TrafficLightService.kt
The traffic light is a vector image of a common traffic light with three colored "bulbs" or "llights": red, yellow, and green. One bulb can be lit at a time, used by the teacher to better manage the classroom.


 --- RUNTIME EVENTS ---
(1) On launch, the traffic light 
	(1.1) checks if the system has a mic array or other active mic input
		(1.1.1)This will be referred to as "mic array" going forward, regardless of what type of microphone is actually being used. 
	(1.2) opens in a windowed state.
		(1.2.1) Windowed desscribes the user experience. Traffic Light launches a service. 
		(1.2.1) Whether it is using an overlay or an Android window, both will be referred to as "windowed" for the purposes of these specifications.
	(1.3) activates red then yellow then green every 0.3 seconds. 
		(1.3.1) When one light activates, the previous one returns to default. 
		(1.3.2) Repeat the sequence once
		(1.3.3) Following the second sequence, all thre elights flash default-active-default in unison three times, flashing every 0.3 seconds. 
		(1.3.4) Following (1.3.3), all lights return to default. 
		(1.3.5) If app initiation requires more than three seconds, the sequence should repeat.
		(1.3.6) If "Blinking Lights" is toggled off in the user settings, this sequence is ignored. Lights remain in default during startup.
(2) The most recent traffic light user preferences are saved. Save the following:
	(2.1) Traffic light size
	(2.2) Mode
	(2.3) Orientation toggle, vertical or horizontal state
	(2.4) Blinking lights toggle on/off state
	(2.5) Adjusted values
			(2.5.1) Adjusted values are saved regardless of whether the final mode is Responsive or not. It is possible for a user to modify values in Responsive mode and then change to Manual.
	(2.6) Added messages
			(2.6.1) Added messages are saved regardless of the final mode.
	(2.7) Sequences
			(2.7.1) Sequences are saved regardless of the final mode.
	(2.8) Show time remaining toggle on/off state
	(2.9) Show timeline toggle on/off state
	(2.10) Traffic light position on the screen if not full-screen
(3) On future app-intent launches, the traffic light loads saved user preferences.


 --- USER INTERFACE ---
(4) The body of the traffic light is a yellow rectangle similar to this picture: https://www.insurancejournal.com/app/uploads/2012/09/traffic-lights.jpg
	(4.1) It includes three "bulbs" or "lights": 
		(4.1.1) Red
			(4.1.1.1) Default state is #B81B0E
			(4.1.1.2) Active state is #FF0000
		(4.1.2) Yellow
			(4.1.2.1) Default state is #B8BB0E
			(4.1.2.2) Active state is #FFFF00
		(4.1.3) Green
			(4.1.3.1) Default state is #549C30
			(4.1.3.2) Active state is #00FF00
		(4.1.4) An active light also includes the image ic_mask_stamp.xml.
			(4.1.4.1) The image appears 0.6f the size of the bulb's circle area.
	(4.2) A traffic light can appear in one of two orientations based on user settings choices:
		(4.2.1) Vertical (the default orientation)
			(4.2.1.1) The red light is on top.
			(4.2.1.2) The yellow light is in the middle.
			(4.2.1.3) The green light is on the bottom.
		(4.2.2) Horizontal
			(4.2.2.1) The red light is on the left.
			(4.2.2.2) The yellow light is in the middle.
			(4.2.2.3) The green light is on the right.
(5) A Settings button is positioned in the bottom left corner.
	(5.1) Default icon state uses ic_settings.xml.
	(5.2) Active state: Programmatically change fill colors for default state icons to #808080.
(6) A Close button is positioned in the top right corner.
	(6.1) Default icon state uses ic_close.xml.
	(6.2) Active state: Programmatically change fill colors for default state icons to #808080.
		

 --- USER EXPERIENCE ---
(7) ``RESIZING and MOVING``
    (7.1) When a user touches two fingers anywhere on the traffic light window that is not a button and performs a pinching motion
        (7.1.1) Pinching open enlarges the window's height and width equally.
        (7.1.2) Pinching closed reduces the window's height and width equally.
    (7.2) When a user press-hold-drags anywhere on the traffic light window that is not a button, they can move the traaffic light window anywhere on the screen.
		(7.2.1) A traffic light window may not move off the screen.
			(7.2.1.1) If a user attempts to move the traffic light beyond the edge of the screen, the traffic light's movement is constrained to the screen edge, preventing any part of the traffic light from becoming inaccessible.
			(7.2.1.2) Attempting to move the traffic light off the edge of the screen does not cause resizing. Once constrained, the traffic light can not continue to move toward the edge.
    (7.3) Resizing and moving are exclusionary actions.
        (7.3.1) If a user is resizing the traffic light, they cannot move the traffic light.
            (7.3.1.1) If a user removes one finger after resizing, they cannot move. They must remove both fingers and begin a new onTouch event to move the traffic light.
            (7.3.1.2) If a user removes one finger after resizing and then places that finger down again, they may continue resizing.
        (7.3.2) If the user is moving the traffic light, they cannot move the traffic light.
            (7.3.2.1) If the user is moving the traffic light and adds a second finger to the screen, that finger is ignored.
            (7.3.2.2) After moving the traffic light, the user must end the current onTouch event before using two fingers to resize.
        (7.3.3) A movement buffer should be included to ignore minor movements during an onTouch event caused by natural human shakiness.
(8) ``SETTINGS``
	(8.1) When a user touches the settings button, its icon changes from (5.1) Default to (5.2) Active.
	(8.2) When activated, a settings menu extends with a smooth transition animation from the settings button.
		(8.2.1) The settings button remains active while the settings window is open.
		(8.2.2) The settings window is rows of text and an icon:
			(8.2.2.1) "Mode"
				(8.2.2.1.1) Following the word "Mode" is a drop-down menu.
					(8.2.2.1.1.1) The default mode is Manual
					(8.2.2.1.1.2) Following the word "Manual" is a drop-down arrow
						(8.2.2.1.1.2.1) The drop-down arrow's default state is ic_arrow_drop_down.xml
						(8.2.2.1.1.2.2) The drop-down arrow's active state is ic_arrow_drop_up.xml
				(8.2.2.1.1) When tapping anywhere in the drop-down menu (text or arrow)
					(8.2.2.1.1.1) A drop-down menu smoothly opens overtop the settings menu
					(8.2.2.1.1.2) A list of mods is displayed in this order from the top down:
						(8.2.2.1.1.2.1) Manual
						(8.2.2.1.1.2.2) Responsive
						(8.2.2.1.1.2.3) Timed Change
			(8.2.2.2) "Orientation"
				(8.2.2.2.1) Following the word "Orientation" is a toggle.
					(8.2.2.2.1.1) The toggle's default position is off.
			(8.2.2.3) "Blinking Lights"
				(8.2.2.3.1) Following the phrase "Blinking Lights is a toggle.
					(8.2.2.3.1.1) The toggle's default position is on.
			(8.2.2.4) "Adjust Values"
				(8.2.2.4.1) Following the phrase "Adjust values" is an edit icon
					(8.2.2.4.1) Default icon state uses ic_edit.xml.
					(8.2.2.4.2) Active state: Programmatically change fill colors for default state icons to #808080.
			(8.2.2.5) "Add Messages"
				(8.2.2.5.1) Following the phrase "Add Messages" is an edit icon
					(8.2.2.5.1) Default icon state uses ic_edit.xml.
					(8.2.2.5.2) Active state: Programmatically change fill colors for default state icons to #808080.
			(8.2.2.6) "Edit Sequence"
				(8.2.2.4.1) Following the phrase "Adjust values" is an edit icon
					(8.2.2.4.1) Default icon state uses ic_edit.xml.
					(8.2.2.4.2) Active state: Programmatically change fill colors for default state icons to #808080.
			(8.2.2.8) "Show Time Remaining"
				(8.2.2.8.1) Following the phrase "Show Time Remaining" is a toggle.
					(8.2.2.8.1.1) The toggle's default position is off.
			(8.2.2.9) "Show Timelline"
				(8.2.2.2.1) Following the phrase "Show Timeline" is a toggle.
					(8.2.2.2.1.1) The toggle's default position is off.
			(8.2.2.10) "Add Another"
				(8.2.2.10.1) Following the phrase "Add Another" is an add icon.
					(8.2.2.10.1.1) The default icon state is ic_add_circle.xml.
					(8.2.2.10.1.2) The active state icon programatically changes the fill color of the default icon to #808080.
	(8.3) When deactivated, the settings menu folds back into the settings button with a smooth transition animation.
		(8.3.1) A user choosing a setting (e.g., orientation) deactivates the settings menu.
		(8.3.2) A user touching outside of the settings window deactivates the settings menu.
		(8.3.3) A user touching the settings button deactivates the settings menu.
		(8.3.4) The settings button returns to default icon state
        





(1) Mode: Manual by default; the user can select between three use modes: (1a) Manual, (1b) Responsive Change, and  (1c) Timed Change. If the device does not have an active mic input, Responsive Change should be inactivated.

(2) Orientation: Vertical by default; when changed to horizontal, the traffic lights appear horizontally with red then yellow then green from left to right.

(3) Blinking lights: On by default; when turned off, color blinking is ignored whenever mentioned in app behavior. Colors are either lit or unlit based on defined usage and never blink.

(4) Adjust values: Only visible when mode is set to Responsive Change; allows the user to change the decibel values that cause color changes.

(5) Add Messages: Only visible when mode is set to Manual Change or Responsive Change; allows the user to add messages that appear beside the traffic light.

(6)Edit Squence: Only visible when mode is set to Timed Change; allows the user to create/change the time duration and color change for the Timed Change mode

(7) Show Time Remaining: Off by default, only visible when mode is set to Timed Change; shows a countdown timer of the current sequence step.

(8) Show Timeline: Off by default, only visible when mode is set to Timed Change; shows a countdown timer of the current sequence step and time values for all future sequence steps.

(9) Add Another: Create another traffic light instance. If four traffic lights are open, this setting is inactivated. This follows the behavior in the purramid_universal_requirements.txt.


(1a) Manual mode behavior: When a user taps on a color that color is lit. If the user taps on a different color, that first color is unlit and the new color is lit. If the user double-taps on the color that is lit, that color is unlit but no new color is lit.


(1b) Responsive mode behavior: When this mode is selected, ambient sound is measured using the mic array. Maxamplitude is measured every two seconds by using standard Google APIs. Based on the decibels (dB) of that sound, a specified color is lit. Green is lit with a measure of 59 dB or less. Yellow is lit with a measure of 60 dB to 79 dB. Red is lit with a measure of 80 dB or higher. If sound changes from one range to antoher, the previous color is unlit and the new color is lit. If a color is within 5 dB of the range above it, the color blinks (between its unlit and lit colors) every 0.5 seconds. This means green would blink from 55 dB to 59 dB and Yellow would blink from 75 dB to 79 dB. Colors do not blink when near a lower range. (For example, moving from 81 dB to 70 dB, red would be lit, but it would not blink.) Because maxamplitude is measured every two seconds, it is possible for decibels to increase or decrease enough to skip a range. In those cases, the color skipped is not shown. (For example,going from 81 dB to 50 dB would cause red to change green without yellow being lit.)

(4) "Adjust Values" opens a window on top of settings. (10) Three color circles form a column on the left (for left-to-right languages) and on the right (for right-to-left languages). (11) Each color then has a minimum and a maximum value text field (following in the same order of left-to-right or right-to-left based on the selected language). The text fields show the default decibel ranges. The string "dB" beside the text field (to the left or right, accordingly). The minimum value for green is 0 and the maximum 59. Yellow is mininimum 60 and maximum 79. Red is minimum 80 and maximum 120. If the user taps on a text field, a cursor appears and the system number pad appears. If a change is made to a value that is adjacent to another value, both values are changed to remain adjacent to one another. (For example, if the maximum of green is changed from 59 to 69, the minimum of yellow would automatically adjust to 70.) If a change is made to a value that crosses the entire range of its adjacent color, the middle color's range is eliminated. The numbers in those fields are replaced with the string N/A. And the other color is one dB away from the modified range. (For example, if the minimum value of red was changed from 80 to 55, the maximum value of green would be set to 54 and both yellow values would be set to N/A.

Any settings that open an additional view (like "Adjust Values) includes a (12) back arrow and a (13) close button. (12) The back arrow returns the user to previous settings view. (13) The close button closes settings and returns the user to the traffic light view.

(14) Below the color ranges is an unchecked checkbox and a string that says "Dangerous Sound Alert". After the string is (15) an information icon (a lowercase i in a circle). If the box is checked and the mic array reports a Maxamplitude value of 150 dB or higher, the red and yellow lights alternate blinking ever 0.2 seconds. In the message field for the red color is the string "WARNING". In the message field for the yellow color is the string "Notify your instructor immediately." In the message field for the green color is the string "Double-tap green to dismiss this alert." If more than one traffic light window is open, all windows display the same alert. Dismissing the alert on one window dismisses it on all of them. The alert must be dismissed before use of the traffic light returns to normal. If all traffic light windows are closed or if the app is destroyed while the alert is active, the alert does not return when the app is reopened.

(15) If the user taps the information icon, a dialog box opens with the following text: "Check this box to display an alert that says "Warning: Notify your instructor immediately." should your hardware's microphone report a sound of 150 decibels or higher. The US Occupational Safety and Health Organization projects the loudest classroom noise would reach 95 dB. 120 db is the sound of a car backfire. 150 dB is the sound of a gunshot. The Purramid is a software application dependent on the readings provided by your microphone. Purramid Learning® makes no guarantee that the sound detected is 150 db or what made the sound is a firearm. But this is the reality that US students live in, and we are committed to providing teachers any tools possible to make their classrooms places of learning and not fear." (The word "Purramid" and the phrase "Purramid Learning®" are never translated.) 


(5) "Add Messages" allows the user to add text, an image, and/or emoji to appear beside a color when it is lit (far enough away that they do not overlap with the body of the traffic light). Once the user presses Add Messages, three dialog boxes appear beside their respective lights. For left-to-right languages, the text fields appear to the right of the color. Text fields include the string "Add Message" (string/setting_add_messages). When the user taps this field, the phrase "Add Message" disappears and a cursor appears. The sytsem keyboard opens. A line may include a maximum of 27 text characdters, 10 emoji, and one image. For right-to-left languages, the message appears to the left of the lit color. The size of the text and emoji should equal 80% of the color circle. Images equal 150% of the color circle, with the center of the image aligning with the center of the color circle. Messages appear when a color is lit and disappear when it is not. If nothing is entered in a message box, nothing appears on the screen. Tapping anywhere other than the text fields ends this setting view.


(1c) Timed Change mode behavior: When switched to Timed Change mode, a play/pause button and a reset button are added to the layout of the traffic light below the body of the traffic light. The play button initiates the sequence. Until the sequence is initiated, no color is lit. Once the play button is pressed, the first color in the sequence is lit and its corresponding message is displayed. Its duration begins to countdown. This time is not shown unless the (7) "Show Time Remaining" setting is toggled on. When countdown for that sequence row elapses, the next row in the order begins, with that light lit, its message displayed, and its duration beginning to count down. This process continues until the sequence complets. At that point, all colors are unlit and all messages are removed. If two rows in a sequence use the same color, the color blinks twice at an interval of 0.3 seconds. 


(6) To create a sequence, the user must press the "Edit Sequence" button. This opens a window similar in design to an Android clock alarm interface. If a user has created sequences, they are organized alphabetically in a column. The last item in a column is the string "Create New Sequence". There can be a maximum of ten sequences saved. With the creation of the tenth sequence, the "Create New Sequence" option is hidden. If no sequences have been created, only the row "Create New Sequence" is shown.

When the user taps into an existing sequence or creates a new sequence, a list editing interface opens up. At the top is a text field with the string "Title" (string/setting_add_title) in it. When the user taps this field, the word "Title" disappears and a cursor appears. The sytsem keyboard opens. They can enter a title for this sequence up to 27 characters long. Below the title is a row with the following elements ordered left to right: (16) two parallel lines used as a reordering drag handle (ic_drag_handle.xml); (17) the numerical value of the row's position in the order, descending sequentially (starting at number 1); (18) a circle with fill 1/3 red, 1/3 yellow, and 1/3 green;  (19) a text field with "H:MM:SS: shown in it; and (20) a message field. If changes are made to the first row of a sequence, a second row appears with all the same default values as the first row except that the sequence order number increases by 1. A user can create a sequence with no more than ten rows. When they reach their tenth row, no new row is populated.

(16) A dragging motion on the reordering handle handle allows the user to change the row's order in the stack. Gracefully animate the row's movement above and insertion back into the sequence order.

(17) This number shows the order value of the row. When a row is moved in the order, the numbers change to match the new sequence order. Numbers should always be in sequence.

(18) when tapped, this circle opens a column view similar to (10) that shows three circles one with red fill, one with yellow, and one with green. When the user taps a specific color, the (18) circle fills entirely with that color. This is the color that is lit during this sequence step.

(19) This is the length of time a sequence lasts. When the user taps into the text field, the text disappears and the system number pad opens. The maximum amount of time per sequence step is 9 hours, 59 minutes, and 59 seconds (displayed H:MM:SS). Colons are added automatically. If a user enters 30, this is 30 seconds and displays as 0:00:30. If the user enters 300, this is 3 minutes, and displays as 0:03:00.

(20) This message field behaves the same as message fields in (5). Any message entered displays while this sequence step is active. If no message is netered, nothing displays.


When the user presses the play button, the sequence starts. The play icon changes to a pause icon. If the pause button is pressed, sequence time countdown is paused and the button changes to a play icon. Pressing play resumes the time countdown. If the user presses the reset button while time is running, the current row sequence starts back over at its starting value with time counting down. The lit color blinks once to show the change. If the user presses the reset button while time is paused, the current row of the sequence resets but timing does not resume until the play button is pressed. The lit color blinks once to show the change. If the user presses reset when time is paused and the sequence is at its starting value, the traffic light resets to the first row of the sequence. The color that was active blinks twice at an interval of 0.3 seconds and then the color of the first row of the sequence blinks once more. (For example, if the colors were changing from green to red, green would blink twice and red would blink once.) If both colors are the same, the light would blink three times at an interval of 0.3 seconds. The sequence does not resume timing until the play button is pressed. If the entire sequence has elapsed, behavior remains the same. Pressing reset restores the last step of the sequence and timing is paused. If the user presses reset again, the sequence entirely resets.


If (7) Show Time Remaining is toggled on, a digital clock of HH:MM:SS shows beside the active color (far enough away that it does not overlap with the body of the traffic light image). If the time value is lesson than 1 hour, no hour value is shown (MM:SS not H:MM:SS). This is intentionally different than how time displays when (19) time is set in (6) Edit Sequence. If the time value is less than 10 minutes, no tens value is shown for minutes (M:SS not MM:SS). If the time value is less than 1 minute, a minute value of 0 is used (30 seconds displays as 0:30). Thus when one hour and 5 minutes counts down to 59 minutes, time would go from 1:05:00 to 59:00. 



If (8) Show Timeline is toggled on a line the length of the traffic light appears beside it (far enough away that it does not overlap with the body of the traffic light image). Color circles with black outlines appear on the line from top to bottom in the order in which they appear in the sequence. Their position on the timeline is dependent on where in the total length of time they begin. If I had a squence with three rows, with the first row lasting 10 minutes and the other two lasting 5, the first color circle would appear at the top of the timeline. The second color circle would appear 50% of the way down the line. The third color circle would appear 75% of the way down the line. The end of the line is an empty circle. When time begins counting down, the color circle begins moving down the timeline at a speed that causes it to reach the next circle when its set time elapses. An empty circle appears where the color originally started. As it reaches the next circle, it moves behind that next color circle. When it is fully obscured, time for that sequence row has ellapsed, its color disappears, and the next color in the sequence begins to move down the timeline, leaving a second empty circle. When the final sequence color reaches the final, empty circle, it obscured by the no-fill. When it is fully obscured and an empty circle remains, the entire sequence has elapsed. Hitting the reset button returns the color to its starting circle. If (7) Show Remaining Time is also toggled on, a clock appears at the midpoint of each line segment for its respective row in the sequence. When that time reaches 0:00, it disappears, and the next clock starts counting down.


