// the_purramid_0_1\app\src\main\specifications
// RandomizersHostActivity.kt
Randomizers is a collection of two different randomization tools: Spin and Slots. They may also be referred to together as spinners. Spinners display a random selection from a defined list of items. 


## Technical Implementation Notes
- Service/Activity type: Activity only (RandomizersHostActivity)
- Multi-window support: Yes (up to 4)
- Window tracking: UUID per randomizer window
- Shares single service: Not applicable
- Requires permissions:
  - READ_MEDIA_IMAGES (Android 13+) for image uploads in lists
  - WAKE_LOCK
  - RECEIVE_BOOT_COMPLETED
- Instance tracking: 
  - Uses standardized instanceId (1-4) pattern
  - Persists with UUID for crash recovery
  - Managed by InstanceManager
- Database entities:
  - RandomizerInstanceEntity
  - SpinItemEntity
  - SpinListEntity
  - SpinSettingsEntity
- Key dependencies:
  - ViewModels: 
	-- ListCreatorViewModel
	-- ListEditorViewModel
	-- RandomizerSettingsViewModel
	-- RandomizerViewModel
	-- SlotsViewModel
  - DAO: RandomizerDao
  - Shared: PurramidPalette, MultiWindowManager


 --- RUNTIME EVENTS ---
(1) On first app-intent launch, the randomizer opens in a windowed state.
(2) The most recent randomizer user preferences are saved. Save the following:
	(2.1) Randomizer mode
        (2.1.1) If Spin mode, also save:
            (2.1.1.1) Selected list
            (2.1.1.2) Spin toggle on/off state
            (2.1.1.3) Announce toggle on/off state
            (2.1.1.4) Celebrate toggle on/off state
            (2.1.1.5) Sequence toggle on/off state
        (2.1.2) If Slots mode, also save:
            (2.1.2.1) Selected lists
            (2.1.2.2) Spin toggle on/off state
            (2.1.2.3) Number of columns (3 or 5)
            (2.1.2.4) Announce toggle on/off state            
	(2.2) All lists
		(2.2.1) Lists are saved regardless of randomizer mode. It is possible for a user to create a new list in Spin mode and then change to Slots.
        (2.2.2) List deletion is at the discretion of the user.
	(2.3) Randomizer position on the screen
(3) On future app-intent launches, the mask loads saved user preferences.


 --- USER INTERFACE ---
(4) ``ALL RANDOMIZERS``
    (4.1) A Settings button is positioned in the bottom left corner of the randomizer window.
        (4.1.1) Default icon state uses ic_settings.xml.
        (4.1.2) Active state: Programmatically change fill colors for default state icons to #808080.
    (4.2) A Close button is positioned in the top right corner of the randomizer window.
        (4.2.1) Default icon state uses ic_close.xml.
        (4.2.2) Active state: Programmatically change fill colors for default state icons to #808080.
        
(5) ``SPIN UI``
    (5.1) The "spin dial" is a circle divided into colored wedges.
        (5.1.1) The minimum number of wedges is 2.
        (5.1.2) The maximum number of wedges is 44.
        (5.1.3) There is one wedge for every item on a list.
        (5.1.4) Wedges are always equally proportioned based on the number of items being shown.
    (5.2) Each wedge has a different color.
        (5.2.1) Colors meet or exceed contrast requirements for WCAG 2.2 AA standards.
            (5.2.1.1) User-defined colors can override the contrast requirements.
    (5.3) Above the spin dial is a "marquee", a rectangle with rounded corners.
        (5.3.1) The marquee displays the active list title.
		(5.3.2) The list title is bold font.
    (5.4) Following the title (but within the marquee rectangle) is a downward facing arrow button
        (5.4.1) The marquee arrow default state is ic_arrow_drop_down.xml.
        (5.4.2) The marquee arrow active state is ic_arrow_drop_up.xml
    (5.5) A selection arrow appears on the side of the spin dial
        (5.5.1) It appears on the right side of the dial for left-to-right languages, using using ic_arrow_right.xml
        (5.5.2) It appears on the left side of the dial for right-to-left languages, using ic_arrow_right.xml
        (5.5.3) The selection arrow points at the randomized item selection.
    (5.6) An item can be text, an emoji, an image, or a combination of the three.
        (5.6.1) List items in a wedge align with the angle bisector from the center wedge point to the midpoint of its outer arc.
            (5.6.1.1) This means that only the selected item will be perfectly horizontal.
            (5.6.1.2) This means the item opposite of the selected item will be upside down.
    (5.7) A spin button appears below the spin dial.
        (5.7.1) Default icon state uses ic_spin.xml.
        (5.7.2) Active state: Programmatically change fill colors for default state icons to #808080.
   
(6) ``SLOTS UI``
    (6.1) "Slots" is three adjacent rectangles contained within one larger container rectangle.
		(6.1.1) This is meant to mirror the design of a slot machine, as seen in this image: https://media.istockphoto.com/id/1408111718/vector/%C3%B0%C3%B0%C3%B1-%C3%B0%C3%B0%C3%B1%C3%B0%C2%B5%C3%B1%C3%B0%C3%B0%C2%B5%C3%B1%C3%B0.jpg?s=612x612&w=0&k=20&c=Je7yR0NLeB_befulI4C354Z6WMRRQZhX8209TzZL6qc=
		(6.1.2) Each item rectangle may be called a "column", as the three rectangles act like three columnar lists.
		(6.1.3) Minimum and maximum list quantities are the same as (5.1)
		(6.1.4) There is one rectangle for every item on a list.
	(6.2) Each rectangle has a different color.
		(6.2.1) The rules for these colors are the same as (5.2).
	(6.3) Above each rectangle is a marquee.
		(6.3.1) Each marquee is placed on top of the containing rectangle.
		(6.3.2) These marquees are the same as (5.3) and (5.4).
	(6.4) A right-facing selection arrow appears on the left side of the containing rectangle, using ic_arrow_right.xml.
		(6.4.1) This arrow aligns with the randomized selections.
		(6.4.2) This arrow aligns with the left-facing selection arrow.
	(6.5) A left-facing selection arrow appears on the right side of the containing rectangle, using ic_arrow_right.xml.
		(6.5.1) This arrow aligns with the randomized selections.
		(6.5.2) This arrow aligns with the right-facing selection arrow.
    (6.6) An item can be text, an emoji, an image, or a combination of the three.
	(6.7) Below each rectangle is a "lock" icon.
		(6.7.1) Default state: ic_lock.xml
		(6.7.2) Active state: ic_unlock.xml
		(6.7.3) Each lock icon is 
			(6.7.3.1) Centered with the item rectangle
			(6.7.3.2) placed on top of the containing rectangle
    (6.8) A spin button appears below the slots container rectangle.
        (6.8.1) Default icon state uses ic_spin.xml.
        (6.8.2) Active state: Programmatically change fill colors for default state icons to #808080.


 --- USER EXPERIENCE ---
(7) ``SETTINGS BUTTON FOR ALL MODES``
	(7.1) If a user taps the (4.1) settings button:
		(7.1.1) its icon changes from (4.1) Default to (4.2) Active.
		(7.1.2) When activated, a settings window opens with a smooth transition animation, as per the universal specifications.
			(7.1.2.1) The settings button remains active while the settings window is open.
			(7.1.2.2) The settings window is rows with text.
				(7.1.2.2.1) Some settings also include an icon after the text, such as a toggle or an edit icon.
		(7.1.3) The settings menu includes the following settings ordered from top down:

(8) ``MODE SETTING FOR ALL MODES``
	(8.1.1) "Mode" appears first in order of settings for both modes
		(8.1.1.1) Following the word "Mode" is a drop-down arrow.
			(8.1.1.1.1) The drop-down arrow's default state is ic_arrow_drop_down.xml
			(8.1.1.1.2) The drop-down arrow's active state is ic_arrow_drop_up.xml
		(8.1.1.2) If the user taps the word "Mode" or the drop-down arrow
			(8.1.1.2.1) A horizontal drop-down menu opens with a smooth animation.
				(8.1.1.2.1.1) The menu displays icons for each mode. 
					(8.1.1.2.1.1.1) From left to right, the icon default states are:
						(8.1.1.2.1.1.1.1) ic_spin.xml
						(8.1.1.2.1.1.1.2) ic_slots.xml
					(8.1.1.2.1.1.2) Active state: 
						(8.1.1.2.1.1.2.1) Programmatically change fill colors for default state icons to #808080
						(8.1.1.2.1.1.2.2) A thick blue line appears beneath the icon.
			(8.1.1.2.2) The randomizer changes to the newly selected mode.
				(8.1.1.2.2.1) Only that randomizer changes modes. Any other randomizers that are also open remain unchanged.
				(8.1.1.2.2.2) Any settings that appear in both modes remain the same.
					(8.1.1.2.2.2.1) For example, if the user changes from SPIN to SLOTS:
						(8.1.1.2.2.2.1.1) The list of items remains the same.
						(8.1.1.2.2.2.1.2) The Announce toggle state remains the same. 

(9) ``ADD ANOTHER SETTING FOR ALL MODES``
	(9.1) "Add Another" appears last in order of settings for both modes.
		(9.1.1) Following the phrase "Add Another" is an add icon.
			(9.1.1.1) The default icon state is ic_add_circle.xml.
			(9.1.1.2) The active state icon programatically changes the fill color of the default icon to #808080.
	(9.2) When a user touches the Add Another button, 
		(9.2.1) Its icon becomes Active.
			(9.2.1.1) Its icon returns to default when the onTouch event ends.
		(9.2.2) A new randomizer appears at the geometric center of the screen.
			(9.2.2.1) The new randomizer adopts the properties of the randomizer from which it was made.
				(9.2.2.1.1) It is set to the same mode.
				(9.2.2.1.2) It has the same height and width.
				(9.2.2.1.3) If the source traffic light had a billboard image, that image appears in the new traffic light as well.
			(9.2.2.2) If another randomizer already exists at the geometric center of the display screen, the new randomizer should appear in an offset position (e.g., +25px down and +25px right) from the centered randomizer.
	(9.3) If four randomizers are already present on the screen, 
		(9.3.1) The Add Another button is inactivated. Nothing happens if a user touches it.
		(9.3.3) The icon fill and outline colors change. (TODO: Define specific hex colors for an inactive icon.)

(10) ``SPIN MODE SPECIFIC UX``
    (10.1) If a user taps the marquee (the (5.4) title or the (5.5) arrow):
		(10.1.1) The marquee arrow changes to its active state with a smooth animation
		(10.1.2) A drop-down menu opens that displays all the available lists.
			(10.1.2.1) The drop-down menu opens with a smooth animation. 
			(10.1.2.2) The active list appears first in the order.
			(10.1.2.3) All other lists are ordered alphanumerically.
		(10.1.3) The user can tap any list title to apply that list
			(10.1.3.1) The new list title replaces the existing list title in the marquee.
				(10.1.3.1.1) The new title is bold font.
			(10.1.3.2) The list items replace the existing list items on the spin dial.
			(10.1.3.3) The drop-down menu closes with a smooth animation.
			(10.1.3.4) The drop-down arrow returns to a default state with a smooth animation.
	(10.2) If a user taps the (5.7) spin button:
		(10.2.1) The spin button changes to its active state.
		(10.2.2) The spin dial rotates with a smooth animation for 2.0 seconds.
			(10.2.2.1) The spin dial rotates clockwise for left-to-right languages.
			(10.2.2.2) The spin dial rotates counter-clockwise for right-to-left languages.
			(10.2.2.3) Use a pseudo-random number generator to select an item from the list.
				(10.2.2.3.1) An item's number is determined by its order in the list.
				(10.2.2.3.2) Only one number result is generated per spin.
				(10.2.2.3.3) Each spin is a unique event, generating a new number result.
			(10.2.2.4) When the animation completes, the randomly selected list item should align with the (5.5) selection arrow.
			(10.2.2.5) If spinning is turned off in the settings, the dial immediately displays the result.

``SPIN MODE SETTINGS``
	(10.3) The settings window for Spin mode includes these additional settings:
		(10.3.1) Each setting includes text and an icon.

``SPIN: LIST EDITOR``
		(10.3.2) "List Editor"
			(10.3.2.1) This settings title is followed by an edit icon.
				(10.3.2.1.1) Default icon state uses ic_edit.xml.
				(10.3.2.1.2) Active state: Programmatically change fill colors for default state icons to #808080.
			(10.3.2.2) Tapping the phrase "List Editor" or the edit icon, opens the list collection editor:
				(10.3.2.2.1) The list collection editor window opens overtop the settings window.
				(10.3.2.2.2) This window includes:
					(10.3.2.2.2.1) A back arrow in the top left corner of the window. 
						(10.3.2.2.2.1.1) Default icon state uses ic_back.xml.
						(10.3.2.2.2.1.2) Active state: Programmatically change fill colors for default state icons to #808080.
						(10.3.2.2.2.1.3) When activated the list collection editor window closes.
							(10.3.2.2.2.1.3.1) The user returns to the main settings window.
					(10.3.2.2.2.2) A close button in the top right corner of the window.
						(10.3.2.2.2.2.1) Default icon state uses ic_close.xml.
						(10.3.2.2.2.2.2) Active state: Programmatically change fill colors for default state icons to #808080.
						(10.3.2.2.2.2.3) When activated all settings related windows close.
					(10.3.2.2.2.3) A list of each list title, ordered alphanumerically.
						(10.3.2.2.2.3.1) There are six pregenerated lists:
							(10.3.2.2.3.1.1) "Colors"
								(10.3.2.2.3.1.1.1) List items are strings to be translated.
								(10.3.2.2.3.1.1.2) List items are: "Red", "Orange", "Yellow", "Green", "Blue", and "Purple"
								(10.3.2.2.3.1.1.3) Colors is the default list displayed if no list is saved in preferences.
							(10.3.2.2.3.1.2) "Consonants (English)"
								(10.3.2.2.3.1.2.1) List items are not strings.
								(10.3.2.2.3.1.2.2) "B", "C", "D", "F", "G", "H", "J", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "X", "Y*", "Z"
							(10.3.2.2.3.1.3) "Continents"
								(10.3.2.2.3.1.3.1) List items are strings to be translated.
								(10.3.2.2.3.1.3.2) "Africa", "Antarctica", "Asia", "Australia", "Europe", "North America", and "South America"
							(10.3.2.2.3.1.4) "Numbers"
								(10.3.2.2.3.1.4.1) List items are not strings.
								(10.3.2.2.3.1.4.2) "0", "1", "2", "3", "4", "5", "6", "7", "8", and "9"
							(10.3.2.2.3.1.5) "Oceans"
								(10.3.2.2.3.1.5.1) List items are strings to be translated.
								(10.3.2.2.3.1.5.2) "Oceans" are "Arctic", "Atlantic", "Indian", "Pacific", and "Southern"
							(10.3.2.2.3.1.6) "Vowels (English)"
								(10.3.2.2.3.1.6.1) List items are not strings.
								(10.3.2.2.3.1.6.2) "A", "E", "I", "O", "U", and "Y*"
						(10.3.2.2.2.3.2) There is a maximum limit of 20 lists.
						(10.3.2.2.2.3.3) "Add New List" appears as the first row in the list
							(10.3.2.2.2.3.3.1) If there are already 20 lists, "Add New List" is not displayed.
							(10.3.2.2.2.3.3.2) Clicking on "Add New List" opens an empty list item editor with empty fields.
					(10.3.2.2.2.4) Each title is followed by a number in parentheses.
						(10.3.2.2.2.4.1) This number is the quantity of items in that list.
						(10.3.2.2.2.4.2) For example, Colors has six items, so "(6)" would appear after its title.
					(10.3.2.2.2.5) Aligned to the right of each list row is a delete button.
						(10.3.2.2.2.5.1) Default state: ic_delete.xml
						(10.3.2.2.2.5.2) Active state: Programmatically change fill colors for default state icons to #808080.
						(10.3.2.2.2.5.3) Tapping the Delete button
							(10.3.2.2.2.5.3.1) Causes the icon to become active
							(10.3.2.2.2.5.3.2) Opens the snackbar, "Are you sure you want to delete this? It cannot be undone."
								(10.3.2.2.5.3.2.1) There is an oval with the string "Cancel"
									(10.3.2.2.5.3.2.1.1) This oval has no fill.
								(10.3.2.2.5.3.2.2) There is an oval with the string "Delete".
									(10.3.2.2.5.3.2.2.1) This oval has a colored fill that matches development standards (blue?)
							(10.3.2.2.2.5.3.3) If the user chooses Cancel:
								(10.3.2.2.2.5.3.3.1) The snackbar closes.
								(10.3.2.2.2.5.3.3.2) The delete icon returns to its default state.
								(10.2.3.3.3.5.3.3.3) The list of lists remains unchanged.
							(10.3.3.3.3.5.3.4) If the user chooses Delete:
								(10.3.2.2.2.5.3.4.1) The snackbar closes.
								(10.3.2.2.2.5.3.4.2) The delete icon returns to its default state.
								(10.2.3.3.3.5.3.4.3) The list is:
									(10.2.3.3.5.3.4.3) Remove from the list of lists
									(10.2.3.3.5.3.4.3) Deleted from preferences.
										(10.2.3.3.5.3.4.3.1) This deletion applies across all randomizer windows.
											(10.2.3.3.5.3.4.3.1.1) If another randomizer displayed the list that was deleted, that randomizer defaults to the first list available in the updated order of lists.
										(10.2.3.3.5.3.4.3.2) This list will not be loaded again on future launches.
						(10.3.2.2.2.5.4) Pregenerated lists can be deleted.
							(10.3.2.2.2.5.4.1) This is most likely to happen for non-English speakers who will choose to replace consonants and vowels from their own languages.
			(10.3.2.3) Tapping the list title opens the list item editor:
				(10.3.2.3.1) The list item editor window opens overtop the previous window.
				(10.3.2.3.2) This window includes:
					(10.3.2.3.2.1) A back arrow in the top left corner of the window. 
						(10.3.2.3.2.1.1) Default icon state uses ic_back.xml.
						(10.3.2.3.2.1.2) Active state: Programmatically change fill colors for default state icons to #808080.
						(10.3.2.3.2.1.3) When activated the list item editor window closes.
							(10.3.2.3.2.1.3.1) The user returns to the main settings window.
							(10.3.2.3.2.1.3.2) If the user attempts to move back with an incomplete list:
								(10.3.2.3.2.1.3.2.1) If there is a title but no items, a snackbar opens with the message, "A list must have at least two items to be created. Please add items or cancel this list creation."
								(10.3.2.3.2.1.3.2.2) If there are items but not title, a snackbar opens with the message, "Please add a title to save this list."
								(10.3.2.3.2.1.3.2.3) If there is a title and one item, the same snackbar from (10.3.2.3.2.1.3.2.1) opens.
					(10.3.2.3.2.2) A close button in the top right corner of the window.
						(10.3.2.3.2.2.1) Default icon state uses ic_close.xml.
						(10.3.2.3.2.2.2) Active state: Programmatically change fill colors for default state icons to #808080.
						(10.3.2.3.2.2.3) When activated all settings related windows close.
					(10.3.2.3.2.3) A text field with the list title.
						(10.3.2.3.2.3.1) If this is a new list, the string "List Title" appears
						(10.3.2.3.2.3.2) Tapping on this text field opens the system keyboard.
					(10.3.2.3.2.4) Below the title text field is 
						(10.3.2.3.2.4.1) a discrete row for each item if the list has already been populated with one or more items.
							(10.3.2.3.2.4.1.1) Each item is displayed in its own text field
								(10.3.2.3.2.4.1.1.1) Tapping an item opens the system keyboard.
							(10.3.2.3.2.4.1.2) Items are ordered alphanumerically 
						(10.3.2.3.2.4.2) Each item row also includes
							(10.3.2.3.2.4.2.1) a color square
								(10.3.2.3.2.4.2.1.1) it immediately follows the text/emoji/image of an item
								(10.3.2.3.2.4.2.1.2) its outline is black
								(10.3.2.3.2.4.2.1.3) its fill is programmatically generated from a color picker library to ensure WCAG 2.2 AA contrast standards are met.
								(10.3.2.3.2.4.2.1.4) If a user taps the color square, it opens a color selector.
									(10.3.2.3.2.4.2.1.4.1) The color selector displays:
										(10.3.2.3.2.4.2.1.4.1.1) The title "Background Color" at the top of the selector view.
										(10.3.2.3.2.4.2.1.4.1.2) A color wheel
											(10.3.2.3.2.4.2.1.4.1.2.1) Tapping anywhere on this wheel changes to the color to the one tapped.
										(10.3.2.3.2.4.2.1.4.1.3) Text fields that show:
											(10.3.2.3.2.4.2.1.4.1.3.1) RGB values of the current color
											(10.3.2.3.2.4.2.1.4.1.3.2) Hex code values of the current color
											(10.3.2.3.2.4.2.1.4.1.3.3) These values change when the color change in (10.3.2.3.2.4.2.1.4.1.2.1)
											(10.3.2.3.2.4.2.1.4.1.3.4) Changing these values changes the color selected in (10.3.2.3.2.4.2.1.4.1.2.1)
										(10.3.2.3.2.4.2.1.4.1.4) HSL sliders
											(10.3.2.3.2.4.2.1.4.1.4.1) Dragging the value on the hue, saturation, or lightness slider applies that change to the color.
										(10.3.2.3.2.4.2.1.4.1.5) Color "Pots"
											(10.3.2.3.2.4.2.1.4.1.5.1) Below the sliders are six circles.
												(10.3.2.3.2.4.2.1.4.1.5.1.1) Each circle has a black outline.
												(10.3.2.3.2.4.2.1.4.1.5.1.2) A circle's fill matches a previous color used.
													(10.3.2.3.2.4.2.1.4.1.5.1.2.1) The left-most circle fill is the most recently color used.
													(10.3.2.3.2.4.2.1.4.1.5.1.2.2) Moving left-to-right, fills are colors that were used one time previous to the one to its left.
														(10.3.2.3.2.4.2.1.4.1.5.1.2.2.1) Pots fill right-to-left rather than left-to-right for right-to-left languages.
													(10.3.2.3.2.4.2.1.4.1.5.1.2.3) A color does not appear twice in the color pots. Anytime it is used, it moves to the left-most position.
													(10.3.2.2.2.4.2.1.4.1.5.1.2.4) If not enough colors have been assigned to fill all six pots, empty pots have no fill.
										(10.3.2.3.2.4.2.1.4.1.6) The bottom of the color includes two buttons.
											(10.3.2.3.2.4.2.1.4.1.6.1) Cancel
											(10.3.2.3.2.4.2.1.4.1.6.2) Continue
											(10.3.2.3.2.4.2.1.4.1.6.3) These use the same design style as (10.3.2.2.2.5.3.2).
											(10.3.2.3.2.4.2.1.4.1.6.4) If the user chooses Continue
												(10.3.2.3.2.4.2.1.4.1.6.4.1) The chosen color populates the left-most color pot.
												(10.3.2.3.2.4.2.1.4.1.6.4.2) The color picker window closes
												(10.3.2.3.2.4.2.1.4.1.6.4.3) The color square on the item row matches the color selected.
								(10.3.2.3.2.4.2.1.5) User selected colors do not have to conform to WCAG color constrast standards.
									(10.3.2.3.2.4.2.1.5.1) Automatically generated colors following this list item will use it to determine contrast.
							(10.3.2.3.2.4.2.2) a delete button, at the very end of the row
								(10.3.2.3.2.4.2.2.1) This has the same behavior as (10.3.2.2.2.5).
							(10.3.2.3.2.4.2.3) an image button adjacent to the delete button
								(10.3.2.3.2.4.2.3.1) Default state ic_image.xml
								(10.3.2.3.2.4.2.3.2) Active state: Programmatically change fill colors for default state icons to #808080.
								(10.3.2.3.2.4.2.3.3) If image upload is activated, open system window to upload an image
									(10.3.2.3.2.4.2.3.3.1) Supported images are png, jpg, gif, bmp, and webp.
									(10.3.2.3.2.4.2.3.3.2) No more than 1 image can be added per line.
									(10.3.2.3.2.4.2.3.3.3) An image cannot be larger than 1 MB in size
										(10.3.2.3.2.4.2.3.3.3.1) If a user attempts to upload an image larger than 1MB, a snackbar opens with the warning "This image is too large. Would you like to optimize it?"
											(10.3.2.3.2.4.2.3.3.3.1.1) The snackbar includes a Cancel button
											(10.3.2.3.2.4.2.3.3.3.1.2) The snackbar includes an Optimize button
											(10.3.2.3.2.4.2.3.3.3.1.3) These use the same design style as (10.3.2.2.2.5.3.2).
											(10.3.2.3.2.4.2.3.3.3.1.4) If the user chooses Optimize, the image is compressed so that it's size is 900 kB or less.
										(10.3.2.3.2.4.2.3.3.3.2) If the user taps the image button again, they receive a warning snackbar that says, "This action will replace your existing image. Would you like to continue?" 
											(10.3.2.3.2.4.2.3.3.3.2.1) The snackbar includes a Cancel button
											(10.3.2.3.2.4.2.3.3.3.2.2) The snackbar includes a Continue
											(10.3.2.3.2.4.2.3.3.3.2.3) These use the same design style as (10.3.2.2.2.5.3.2).
											(10.3.2.3.2.4.2.3.3.3.2.4) If the user chooses Continue, the previous image is replaced with the new upload.
							(10.3.2.3.2.4.2.4) an emoji button adjacent to the image button
								(10.3.2.3.2.4.2.4.1) Default state ic_emoji.xml
								(10.3.2.3.2.4.2.4.2) Active state: Programmatically change fill colors for default state icons to #808080.
								(10.3.2.3.2.4.2.4.2.1) If emoji is activated, open an emoji library
									(10.3.2.3.2.4.2.4.2.1.1) The library is license free.
									(10.3.2.3.2.4.2.4.2.1.2) The library closes after one emoji is selected.
										(10.3.2.3.2.4.2.4.2.1.2.1) TODO: Confirm this is standard behavior.
									(10.3.2.3.2.4.2.4.2.1.3) No more than 10 emoji can be added per line.
						(10.3.2.3.2.4.3) A row with the string "Add an Item"
							(10.3.2.3.2.4.3.1) This row always appears last.
							(10.3.2.3.2.4.3.2) This row does not appear if there are 44 list items.
							(10.3.2.3.2.4.3.3) Tapping on this row opens a large rectangular text field if list items do not already exist.
								(10.3.2.3.2.4.3.3.1)This would be the size of five list title rows in the list collection editor view.
								(10.3.2.3.2.4.3.3.2) In the top right corner of this text field is:
									(10.3.2.3.2.4.3.3.2.1) An emoji icon button
										(10.3.2.3.2.4.3.3.2.1.1) This follows the same rules as (10.3.2.3.2.4.2.4)
									(10.3.2.3.2.4.3.3.2.2) An image icon button
										(10.3.2.3.2.4.3.3.2.2.1) This follows the same rules as (10.3.2.3.2.4.2.3)
								(10.3.2.3.2.4.3.3.3) Tapping the text field opens the system keyboard
									(10.3.2.3.2.4.3.3.3.1) The return key creates a new row. It does not close the system keyboard.
								(10.3.2.3.2.4.3.3.4) If the user press-hold until a paste prompt appears, they can post their entire list if it is already on the Android clipboard.
								(10.3.2.3.2.4.3.3.5) Each line of the text field is considered its own item.
									(10.3.2.3.2.4.3.3.5.1) Text, emoji, and an image can all appear on the same line.
								(10.3.2.3.2.4.3.3.6) 1.5 seconds after the last input to the text field is made:
									(10.3.2.3.2.4.3.3.6.1) the text field closes.
									(10.3.2.3.2.4.3.3.6.2) Text/emoji/images in the text field are distributed into individual lists.

``SPIN: SPIN ANIMATION``
		(10.3.3) "Spin Animation"
			(10.3.3.1) Following the phrase "Spin Animation" is a toggle.
				(10.3.3.1.1) The toggle's default position is on.
					(10.3.3.1.1.1) The toggle should include the words "On" and "Off"
					(10.3.3.1.1.2) These words should be strings so they can be translated.
			(10.3.3.2) If the setting is toggled on, activating the Spin button will cause a spin animation.
			(10.3.3.3) If the setting is toggled off, activating the Spin button does not cause a spin animation.
				(10.3.3.3.1) The result of that spin is immediately displayed.

``SPIN: ANNOUNCE``
		(10.3.4) "Announce"
			(10.3.4.1) Following the phrase "Announce" is a toggle.
				(10.3.4.1.1) The toggle's default position is off.
					(10.3.4.1.1.1) The toggle should include the words "On" and "Off"
					(10.3.4.1.1.2) These words should be strings so they can be translated.
			(10.3.4.2) If the setting is toggled on:
				(10.3.4.2.1) A smooth animation enlarges the randomized item selection to be displayed to the side of the spin dial.
					(10.3.4.2.1.1) The item is displayed at 10f its size on the spin dial.
					(10.3.4.2.1.2) Enlargement should not pixelate text, emoji, or images.
					(10.3.4.2.1.3) This enlargement is an estimate and will need to be revised following trial and error.
				(10.3.4.2.2) The announcement remains on the screen until the user taps the screen.
			(10.3.4.3) If the setting is toggled off, no enlargement occurs after a spin.

``SPIN: CELEBRATE``
		(10.3.5) "Celebrate"
			(10.3.5.1) This setting is only active when Announce is active.
			(10.3.5.2) Following the phrase "Celebrate" is a toggle.
				(10.3.5.2.1) The toggle's default position is off.
					(10.3.5.2.1.1) The toggle should include the words "On" and "Off"
					(10.3.5.2.1.2) These words should be strings so they can be translated.
			(10.3.5.3) If Celebrate is toggled on:
				(10.3.5.3.1) when Announce is toggled off, Announce is also toggled on.
					(10.3.5.3.1.1) If Celebrate is then toggled off, Announce remains toggled on.
				(10.3.5.3.2) A confetti animation displays above the announced result for 3.0 seconds
					(10.3.5.3.2.1) Use the Konfetti animation
					(10.3.5.3.2.2) Use the following colored confetti:
						(10.3.5.3.2.2.1) confetti_piece_blue.xml
						(10.3.5.3.2.2.3) confetti_piece_green.xml
						(10.3.5.3.2.2.3) confetti_piece_red.xml
						(10.3.5.3.2.2.4) confetti_piece_violet.xml
						(10.3.5.3.2.2.5) confetti_piece_yellow.xml

``SPIN: SEQUENCE``
		(10.3.6) "Sequence"
			(10.3.6.1) This setting is only active when Announce is toggled off.
			(10.3.6.2) Following the phrase "Sequence" is a toggle.
				(10.3.6.2.1) The toggle's default position is off.
					(10.3.6.2.1.1) The toggle should include the words "On" and "Off"
					(10.3.6.2.1.2) These words should be strings so they can be translated.
			(10.3.6.3) If Sequence is toggled on:
				(10.3.6.3.1) when Announce is on, Announce is toggled off
				(10.3.6.3.2) when Celebrate is on, Celebrate is toggled off
				(10.3.6.3.3) a spin animation lasts for 1 second for every 10 items on a list (rounded up to the next second), up to a maximum of 3 seconds
				(10.3.6.3.4) a randomized order is created for each item on the list 
				(10.3.6.3.5) the first result in the sequence is displayed where one result is displayed for Announce.
					(10.3.6.3.5.1) This is referred to as "the displayed result"
					(10.3.6.3.5.2) Below the displayed result are the next three results in the sequence
						(10.3.6.3.5.2.1) They appear smaller than the first result displayed.
				(10.3.6.3.6) Beside the sequenced results are
					(10.3.6.3.6.1) An up arrow.
						(10.3.6.3.6.1.1) Default state: ic_arrow_drop_up.xml
						(10.3.6.3.6.1.2) Active state: Programmatically change fill colors for default state icons to #808080
					(10.3.6.3.6.2) A down arrow.
						(10.3.6.3.6.2.1) Default state: ic_arrow_drop_down.xml
						(10.3.6.3.6.2.2) Active state: Programmatically change fill colors for default state icons to #808080
				(10.3.6.3.7) If the user taps the down arrow:
					(10.3.6.3.7.1) The down arrow is activated for the duration of the onTouch event
					(10.3.6.3.7.2) The displayed result moves up with a smooth animation.
						(10.3.6.3.7.2.1) It appears smaller like the items below the displayed result.
					(10.3.6.3.7.3) The next item in the sequence moves up with a smooth animation. It is now the displayed result.
					(10.3.6.3.7.4) If the list has more than four items, the next item in the sequence that had not been visible now becomes the last item shown below the displayed result.
						(10.3.6.3.7.4.1) No more than three items appear below the displayed result.
						(10.3.6.3.7.4.2) No more than three items appear above the displayed result.
					(10.3.6.3.7.5) If the displayed result is the last item in the sequence, tapping the down button yields no result 
				(10.3.6.3.8) If the user taps the up arrow:
					(10.3.6.3.8.1) The up arrow is activated for the duration of the onTouch event.
					(10.3.6.3.8.2) The displayed result moves down with a smooth animation.
					(10.3.6.3.8.3) The previous item in the sequence moves down with a smooth animation. It is now the displayed result.
					(10.3.6.3.8.4) If the displayed result is the first item in the sequence, tapping the up button yields no result.
				(10.3.6.3.9) Pressing the spin button creates an entirely new sequence.
				(10.3.6.3.10) Changing the list that is displayed on the spin dial clears the displayed sequence
					(10.3.6.3.10.1) A new sequence is not created until the user presses the spin button.


(11) ``SLOTS MODE SPECIFIC UX``
    (11.1) If a user taps any marquee (the (5.3) title or the (5.5) arrow):
		(11.1.1) That marquee arrow changes to its active state with a smooth animation
		(11.1.2) A drop-down menu opens that displays all the available lists.
			(11.1.2.1) The drop-down menu opens with a smooth animation. 
			(11.1.2.2) The active list appears first in the order.
			(11.1.2.3) All other lists are ordered alphanumerically.
				(11.1.2.3.1) Slots uses the same pregenerated lists as Spin, as per (10.3.2.2.2.3.1)
		(11.1.3) The user can tap any list title to apply that list to that column
			(11.1.3.1) The new list title replaces the existing list title in the marquee.
				(11.1.3.1.1) The new title is bold font.
			(11.1.3.2) The list items replace the existing list items on the spin dial.
			(11.1.3.3) The drop-down menu closes with a smooth animation.
			(11.1.3.4) The drop-down arrow returns to a default state with a smooth animation.
			(11.1.3.5) The same list can be assigned to more than one column.
	(11.2) If a user taps the (6.8) spin button:
		(11.2.1) The spin button changes to its active state.
		(11.2.2) The item rectangles randomize for 2.0 seconds.
			(11.2.2.1) Because there is no spin dial, slots spinning briefly displays a new item from the list until the final selection is made.
				(11.2.2.1.1) Use a pseudo-random number generator to sequence the list items.
					(11.2.2.1.1.1) Each list has its own distinct sequence order.
					(11.2.2.1.1.2) An item's number is determined by its order in the list.
				(11.2.2.1.2) Display rectangles in this randomized sequence order.
					(11.2.2.1.2.1) Rectangles change every 0.2 seconds.
					(11.2.2.1.2.2) The final selections are the tenth rectangle shown in each column.
					(11.2.2.1.2.3) If a list has fewer than 10 items, the list repeats.
				(11.2.2.1.3) Each spin is a unique event, generating a new number result for each column.
		(11.2.3) When the animation completes, the randomly selected list item should align with the (5.5) selection arrow.
		(11.2.4) If spinning is turned off in the settings, the slots immediately display their results.
	(11.3) If a user taps the the (6.7) lock button:
		(11.3.1) The lock button changes to its active state
		(11.3.2) The locked column does not randomize when the spin button is activated.
			(11.3.2.1) There is no color change.
			(11.3.2.2) The displayed item remains the same.

``SLOTS MODE SETTINGS``
	(11.4) The settings window for Slots mode includes these additional settings:
		(11.4.1) Each setting includes text and an icon.
		(11.4.2) "Column Number"
			(11.4.2.1) Following the phrase "Column Number" is a toggle.
				(11.4.2.1.1) The toggle's default state is "3" 
					(11.4.2.1.1.1) The toggle should include the numerals "3" and "5".
			(11.4.2.2) when the toggle is set to "3", it appears as detailed above.
			(11.4.2.3) When the toggle is set to "5", the three-column UI changes to a five-column UI
				(11.4.2.3.1) Two new item rectangles appear within the containing rectangle
				(11.4.2.3.2) Each new rectangle has its own marquee.
				(11.4.2.3.3) Each new rectangle has its own lock button.
		(11.4.3) "List Editor" uses the same behavior as (10.3.2)
		(11.4.4) "Spin Animation" uses the same behavior as (10.3.3)
		(11.4.5) "Announce" uses the same behavior as (10.3.4)

