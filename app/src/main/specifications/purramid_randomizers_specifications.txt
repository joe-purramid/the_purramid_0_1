You are an expert Kotlin software developer. I am creating an Android 13 app in Kotlin for large tablets (55" or larger). It includes seven app intents, each a different tool like a clock and a timer. One of these intents is a "Randomizers" app. It will have its own activity or service file separate from the mainActivity.kt file. Below are the definitions for the spinner mode of Randomizers.



The app intent has four modes, titled "Spin", "Slots", "Dice", and "Coin Flip". When the app intent is launched, the randomizer displayed will match the settings preferences of the last instance used. If none has been used, it defaults to spinner mode. It supports Android freeform window. Touch events pass through to lower layers everywhere the app is not covering. The app can be dragged with one finger and resized with two. If the window is being dragged, a second finger applied is ignored. If the window is being resized, movement across the screen will be ignored. Text is implemented as strings so it can be translated. Icons include long-press tooltips for accessibility. Each randomizer includes a Settings button and a Close button that appear in the corner of the app window. One setting is "add another", which opens a second randomizer, cloning the settings preferences of the randomizer it was opened from. A maximum of four Randomizers can be open at once, and they do not need to be the same mode. Settings changes apply only to the randomizer that opened the settings view. New Randomizers open in the center of the screen, offset from other Randomizers that may be open. The last window closed will be saved to be opened the next time the app is launched. If the app is destroyed, all Randomizers that were open will be restored (although any results data do not need to be retained). Settings are not uniform between modes. The list of settings available is specific to the mode the randomizer is in.



The default spinner has 6 wedges. It can have as few as 2 or as many as 44. Each wedge has its own color The colors of adjacent wedges comply with WCAG 2.2 AA contrast requirements (unless the user has manually changed the colors). The wedge dimensions change to make each wedge an equivalent size. A spinner circle and its wedges will be referred to collectively as a "dial".



A list is a collection of items: text, images, or emoji. When a list is chosen by the user, each item appears in its own wedge. Items are sized based on the space afforded by the wedge. It is understood and accepted that a large number of pie wedges will obscure the visibility of items.



Items displayed on a dial are aligned with the angle bisector from the center wedge point to the midpoint of its outer arc. That means, for a left-to-right language dial, the text of the rightmost wedge will be perfectly horizontal while the text of the leftmost wedge will be upside down.



The center button spins the dial clockwise for left-to-right language users and counter-clockwise for right-to-left language users. A selection arrow is a black equilateral triangle that points toward the center of the dial. It is fixed to the right side of the dial for left-to-right language users and to the left side of the dial for right-to-left language users. When spun, the dial turns for 2.0 seconds. This spin is animated. When the dial stops spinning, a selection arrow will be centered on a pie wedge.



A rectangle with rounded corners creates a marquee above the spin dial. This displays the list title. Following the title is an inverted caret. If any part of the marquee is tapped, a drop-down list opens with an extending animation. The inverted caret turns right-side-up. Selecting a list, tapping the marquee title, tapping the carpet, or tapping outside of the drop-down view closes the drop-down. When a list is chosen, the order of its items on the dial is random.



The Settings button opens a settings window. The spinner that opened the settings is highlighted with a yellow background. The settings window includes a close button made by a Unicode X.



1. Mode: This allows the user to change to Slots, Dice, or Coin Flip. Each mode is represented by an SVG icon. When the mode changes, the spinner changes to the new mode, but the settings window does not close. If the mode changes from Spin to Slots, the current List will be the first of the Slots list. (To be explained when Slot is defined.)



2. List editor: This opens another window atop the settings view. A stacked list of existing lists is ordered alphabetically. The name of each list is followed by a number in parentheses. This number is the quantity of items in that list. (For example, a list of vowels that includes A, E, I, O, U, and Y would read "Vowels (6)". Aligned to the right side of each list is a delete button (a trash can icon). Pressing the delete button opens an "Are you sure you want to delete this?" warning box with a Cancel button and a Confirm button. Cancel button has no fill. The confirm button has a blue fill. This is a common cancel/ok pattern. Match best practices.



The first of the list is always "Add New List". Selecting a list opens that list in an editor. Selecting "Add New List" opens a "list Creator". This Edit List window has a back button to return the user to the settings as well as a close button to close settings entirely.



The list creator Opens a window atop the List Editor window. It includes a back button that returns the user to the List Editor and a close button that closes the settings entirely. The list creator is a series of rectangles similar to the stacked lists from the list editor. Set above and apart from the others is a rectangle. It displays the string "Text Title" in dark gray text. When the user taps this box, the system keyboard will open and "text title" disappears. They should never need to delete this phrase. Hitting "enter" on the system keyboard confirms the text entry and closes the system keyboard.



Below the title rectangle is a single, large text field. Tapping in this field opens the system keyboard. The user can type text into the field. The return button creates a new row. Tap-and-hold in this field will bring up a "Paste" prompt. If selected, any text on the clipboard is pasted into the field. After 1.5 seconds, if no further input has been made, each row of text displays in its own rectangle. The text of the item followed immediately by a pre-assigned color square with a black outline. On the right side of the item rows are three icon buttons: an image, an emoji, and a trash can. The trash can functions the same as the delete button from List editor. The image and emoji buttons are defined below.



Tapping on the item text opens the system keyboard. A cursor appears at the point touched. It can be moved by touching elsewhere in the text field. Touch-and-hold selects the entire word and the standard Android cut/copy/paste options appear.Â 



Text fields may not contain more than 27 characters. If a user pastes text in the large text field with more than 27 characters per row, the 27th character is replaced with an ellipsis. Characters 28 and beyond of that row are deleted.



Tapping on the color square opens a color selector. it has the title "Background Color" atop a standard color wheel. Beside the wheel is a preview rectangle of the chosen color and the stanadrd RGB and Hex code text fields. It overrides any contrast requirements from auto-assigned colors. Beneath the color wheel are six circles with black outlines that show the six most recent custom colors. These are called "color pots". Beneath the color pots is an "Apply" button. This button closes the color selector and applies that color the the item. The color square beside the item text now shows the custom color.



A newly applied color will fill the leftmost color pot the next time the color selector is opened. Older colors move down the row toward the right. If fewer than six custom colors have been chosen, the remaining color pots have a white fill. If more than six custom colors have been chosen, the oldest is forgotten. If a custom color is selected, a blue "selection circle" encircles the color pot and that color is shown in the color preview rectangle. If a custom color is applied from the row, it moves back to the leftmost circle the next time the color selector is opened.



The last rectangle of the items list is empty. It says "Add another item" in the same gray text as was used in the list title. The same beahvior applies that tapping this box opens the system keyboard and the "add another item" text disappears. The enter button on the keyboard confirms the text as a new item. A color is automatically assigned. This new color meets WCAG 2.2 AA contrast requirements even if the color of the item above it is custom. When the user reaches the maximum number of list items (44), this rectangle stops appearing.



If the user taps on the image button, this opens a file selector where the user can upload one jpg, png, gif, bmp, or webp file. A list item can only include one image. If the user taps the image button again, they receive a warning window that says, "This action will replace your existing image. Would you like to continue?" It should have cancel and continue buttons in the same design style as Cancel/Confirm. Uploaded images maintain their aspect ratios. They are not stretched. They are reduced to fit on the dial, but they should not be shrunk so that they distort when shown as an announcement result. If an image is 1 MB or larger, the user should receive a warning window that says "This image is too large. Would you like to optimize it?" This includes Cancel and Optimize buttons in the same design style as Cancel/Confirm. If the user chooses Optimize, the image should be shrunk so that it's size is 900 kB or less.



If the user taps on the emoji button, it opens an emoji library that shows a list of emoji that are free to use without license. The user can add ten or fewer emoji per item. There will need to be some kind of "done" button when the user has selected the emoji they want.



Text, images, and emoji can all be included in one item. If the amount of content per row is too large to fit onto an item wedge clearly, it is acceptable for it to disappear at the dial center and the wedge arc edge. The user will learn how best to create items through this inferior use experience.



3. Spin: on/off toggle. The default is on. If this is turned off, the selection happens immediately without animating the dial spin. The order of items changes so that the selected item is in the wedge with the selection arrow.



4. Announce: on/off toggle. The default is off. If this is turned on, the text/image/emoji selected is displayed beside the spin dial. An animation takes it from the size it appears on the dial to a much bigger display (unsure of the approrpiate enlargement size at this time).



5. Celebrate: on/off toggle. The default is off. This setting is only active if Announce is turned on. If Announce is toggled off, this setting is inactive and shown as gray. If this is turned on, a fireworks animation plays for 3.0 seconds above the announced selecxtion. Ensure that the fireworks do not include flashes that could cause siezures.



6. Sequence: on/off toggle. The default is off. If this is turned on, Announce and Celebrate cannot be on. If they were already on, they are turned off and become inactive and turn gray. When this is on, the dial spins for 1 second for every ten items in the list (rounded up). When the spin animation is complete, the item from the wedge with the selection arrow on the dial is the first of a randomized results list (it does not follow the order of the items on the list). It appears beside the dial (similar to Announce). Beside it are up- and down-facing triangle buttons. Below this item are the next four items in the list. They appear smaller. If the user taps the down-facing arrow, the current term moves up and gets smaller. The next in the order moves up and gets larger. Nine total items can appear beside the dial, the active item, four before it, and four after it. When the user has navigated to the end of the list, terms only appear above it. The up arrow cannot be used if no items are above the current one. The down arrow cannot be used if no items are below the current one. Clicking the spin button creates an entirely new randomized list, beginning at the first term again. Changing the list from the marquee drop-down removes any sequence currently displayed.



These are all the features of the Spin mode. Let us begin coding this before we address the details of the other modes.

''SLOTS''

The "slots" mode is similar in function to the spin dial. But instead of having a dial that shows all the items in the list, it has a rectangle that shows the current item with a rectangle above and below showing other items. These tiles fade away in a similar manner to the sequence setting.



There are three columns (or five based on user settings) of lists, creating a type of slot machine view. Each column has a list title marquee at its top (with the same functionality as in spin mode) and a padlock button at the bottom. The padlock icon appears unlocked by default. If a user taps the unlocked padlock button, it changes from unlocked to locked. If they tap a locked padlock, it unlocks.



Each column displays a list. The same list can be used by multiple columns. Their results are independent of one another. The most common example of this is the English lesson "consonant, vowel, consonant", where the teacher randomly selects three letters, two consonants and one vowel.



When the user presses the spin button, all unlocked columns spin (vertically, not clockwise like a spin dial) and stop on a randomized result. Spin time is the same as it is for spin mode. Any locked column remains on the result currently displayed without any kind of spinning animation.



The settings for slots mode are:



Mode (same as spin except the user can choose from spin, dice, and coin flip)

Three-column or Five-column toggle. This determines the number of columns shown as part of the slots interface.



Create/Edit Lists - this is the same functionality as spin.



Announce - This is the same functionality as spin, but the results of each column are shown at once (including any columns that were locked).


''DICE''



''COIN FLIP''

Each window includes its own pool of coins. Coins available are 1 bit (1b), 5 bits (5b), 10 bits (10b), 25 bits (25b), 1 meatball (1MB), and 2 meatballs (2MB). A user can have a max of ten of each coin in their pool. Coin flipping behavior will be the same as dice rolling, with a button that flips all the coins in the user's pool. Coins animate a flipping motion for 0.75 seconds and then display either a heads (obverse) or tails (reverse) result.



The settings for coin flip are as follows:



1. Mode - Spin, Slots, Dice, Coin Flip



2. Coin Colors - this uses the colorpalette shared file. Goldenrod is the default color.



3. Flip Animation - on/off toggle, default on. If turned off, the coin flip animation is not shown and the result is displayed immediately.



4. Free Form - on/off toggle, default off. When on, all dice in the dice pool appear on the screen. They show their heads (obverse) side. The Flip button is replaced with a Tails button. If pressed, all coins switch to their tails (reverse) side and the button changes to a Heads button. The user can drag each coin anywhere within the bounds of the window.



5. Announcement - On/off toggle, default on. Match the Dice Announcement design. Mutually exclusive with Probability and free form.



6. Probability - Drop down, default "None". The drop-down menu includes the following options:

- None: Default behavior



- Two Columns: Two adjacent columns, heads and tails, appeaer in the window. When coins are flipped



- 3x3 Grid: A 3x3 matrix of empty boxes appears in the window. Each time the user flips a coin/coins, the result of H or T appears in a box, starting at the top left and filling horizontally. When one row is filled, results start on the next row until all boxes are full.Â 



If multiple coins are in the pool, the numbers of the total of each obverse and reverse are listed *H/*T. The type of coin is not tracked. For example, if the user has four 1MB and two 25b and the flip resulted in 1MB - H, H, H, T and 25b - T, T, the box would show 3H/3T.



If all boxes are full, the Flip button turns into a Reset button.



If a user taps a box, a flip action is implemented for that box and any other empty boxes that come before it. For example, the first two boxes of the top row of a 3x3 grid are filled. The user taps the middle box of the second row. Three flip actions will occur, with results populating the top right, middle left, and middle center boxes, in that order. If a user taps a box that is already filled, nothing happens.



- 6x6 Grid: The same as 3x3 but with a larger matrix.



- 10x10 Grid: The same as 3x3 but with a larger matrix.



- Graph Distribution



If graph disstribution is selected, the following settings become visible:

- Graph Distribution Type - match Dice graph distribution design

- Graph Line Style - match Dice line style design

- Graph Flip Count - match Dice flip count design